generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Portfolio Owner Profile
model Profile {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  email       String   @unique
  name        String
  title       String
  bio         String?
  phone       String?
  location    String?
  githubUrl   String?
  linkedinUrl String?
  resumeUrl   String?
  avatarUrl   String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("profiles")
}

// Skills with categories and proficiency
model Skill {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  category    String // "Frontend", "Backend", "Tools", etc.
  years       Int      @default(1)
  proficiency Int      @default(50) // 0-100
  description String?
  icon        String? // Icon name or URL
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("skills")
}

// Projects with rich metadata
model Project {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  slug            String    @unique
  description     String
  longDescription String?
  technologies    String[] // Array of tech stack
  imageUrl        String?
  demoUrl         String?
  githubUrl       String?
  status          String    @default("completed") // "in-progress", "completed", "archived"
  featured        Boolean   @default(false)
  isActive        Boolean   @default(true)
  order           Int       @default(0)
  startDate       DateTime?
  endDate         DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@map("projects")
}

// Work Experience
model Experience {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  company      String
  location     String?
  type         String    @default("full-time") // "full-time", "part-time", "freelance", "contract"
  description  String
  achievements String[] // Array of key achievements
  technologies String[] // Tech stack used
  startDate    DateTime
  endDate      DateTime?
  isCurrent    Boolean   @default(false)
  isActive     Boolean   @default(true)
  order        Int       @default(0)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@map("experiences")
}

// Blog Posts
model BlogPost {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String    @unique
  excerpt     String
  content     String
  coverImage  String?
  tags        String[] // Array of tags
  isPublished Boolean   @default(false)
  isFeatured  Boolean   @default(false)
  views       Int       @default(0)
  readTime    Int? // Estimated read time in minutes
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("blog_posts")
}

// Contact Form Submissions
model ContactSubmission {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  message   String
  ip        String?
  userAgent String?
  status    String   @default("new") // "new", "read", "replied"
  isSpam    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contact_submissions")
}

// Site Settings/Configuration
model SiteConfig {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  key         String   @unique
  value       String
  type        String   @default("string") // "string", "number", "boolean", "json"
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("site_config")
}

// Visitor Analytics (your existing model)
model Visitor {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  ip        String   @unique
  visits    Int      @default(1)
  country   String?
  region    String?
  city      String?
  userAgent String?
  referrer  String?
  lastVisit DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("visitors")
}
